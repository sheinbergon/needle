plugins {
    id 'java'
    id 'jacoco'
    id 'signing'
    id 'checkstyle'
    id 'java-library'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id "org.jetbrains.kotlin.jvm" version "1.7.10"
    id "io.gitlab.arturbosch.detekt" version "1.21.0"
    id 'io.franzbecker.gradle-lombok' version '5.0.0'
}

allprojects {

    ext {
        nexus = [
                target  : project.findProperty("nexus.target") ?: System.getenv("NEXUS_TARGET") ?: 'SNAPSHOT',
                username: project.findProperty('nexus.username') ?: System.getenv("NEXUS_USERNAME"),
                password: project.findProperty("nexus.password") ?: System.getenv("NEXUS_PASSWORD"),
        ]
        signing = [
                gpgPrivateKey: project.findProperty("signing.gpg.privateKey") ?: System.getenv("GPG_PRIVATE_KEY"),
                gpgPassphrase: project.findProperty("signing.gpg.passphrase") ?: System.getenv("GPG_PASSPHRASE")
        ]
    }

    group "org.sheinbergon"
    version "0.4.0"

    sourceCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {

    apply plugin: 'jacoco'
    apply plugin: 'signing'
    apply plugin: 'checkstyle'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'io.gitlab.arturbosch.detekt'
    apply plugin: 'io.franzbecker.gradle-lombok'

    dependencies {
        api "net.java.dev.jna:jna-platform:5.12.1"
        api "com.google.guava:guava:31.1-jre"

        testImplementation "com.natpryce:hamkrest:1.8.0.1"
        testImplementation "org.amshove.kluent:kluent:1.68"
        testImplementation "org.jetbrains.kotlinx:atomicfu:0.18.2"
        testImplementation "org.jetbrains.kotlin:kotlin-stdlib"

        testImplementation 'org.junit.platform:junit-platform-runner:1.8.2'
        testImplementation 'org.junit.platform:junit-platform-suite-engine:1.8.2'
        testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
        testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.8.2'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

        detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.21.0"
    }

    lombok {
        version = "1.18.24"
    }

    jacoco {
        toolVersion = "0.8.5"
    }

    test {
        useJUnitPlatform()
        testLogging {
            exceptionFormat = 'full'
            events "passed", "skipped", "failed"
        }
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test
        reports {
            xml.enabled true
            csv.enabled false
            html.enabled true
        }
    }

    checkstyle {
        toolVersion '10.3'
        configFile file("$rootDir/checkstyle.xml")
    }

    detekt {
        toolVersion = "1.21.0"
        config = files("$rootDir/detekt.yml")
        input = files("src/main/kotlin", "src/test/kotlin")
        buildUponDefaultConfig = true
    }

    afterEvaluate {

        version = "$version-${nexus.target}"

        compileTestKotlin {
            dependsOn('detekt')
            kotlinOptions {
                jvmTarget = JavaVersion.VERSION_11
            }
        }

        compileKotlin {
            dependsOn('detekt')
            kotlinOptions {
                jvmTarget = JavaVersion.VERSION_11
            }
        }

        signing {
            required { nexus.target == 'RELEASE' }
            useInMemoryPgpKeys(signing.gpgPrivateKey, signing.gpgPassphrase)
            publishing.publications.forEach {
                sign(it)
            }
        }
    }
}

wrapper {
    gradleVersion = "7.4.2"
}


nexusPublishing {
    transitionCheckOptions {
        maxRetries.set(100)
        delayBetween.set(Duration.ofSeconds(5))
    }
    useStaging = "${nexus.target}".equals('SNAPSHOT')
    repositories {
        sonatype {
            stagingProfileId = '8fd6a6ae6b815'
            username = nexus.username
            password = nexus.password
        }
    }
}
